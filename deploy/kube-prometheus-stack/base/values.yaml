global:
  rbac:
    createAggregateClusterRoles: true
kubeProxy:
  enabled: false # kube-proxy less installation
kubeScheduler:
  enabled: false # scraping via pushprox as binded to localhost
kubeControllerManager:
  enabled: false # scraping via pushprox as binded to localhost
kubeEtcd:
  enabled: false # scraping via pushprox as binded to localhost
grafana:
  enabled: true
  envFromSecret: github-client
  deploymentStrategy:
    type: RollingUpdate
  grafana.ini:
    server:
      domain: grafana.k8s.labz.ch
      root_url: https://grafana.k8s.labz.ch
    auth.github:
      enabled: true
      allow_sign_up: true
      client_id: aaaabbbbcccc
      client_secret: ddddeeeeffff
      scopes: user:email,read:org
      auth_url: https://github.com/login/oauth/authorize
      token_url: https://github.com/login/oauth/access_token
      api_url: https://api.github.com/user
      allowed_organizations: acend
      allow_assign_grafana_admin: true
      role_attribute_path: contains(groups[*], '@acend/team-cluster-admins') && 'GrafanaAdmin' || 'Viewer'
    auth:
      disable_login_form: true
  sidecar:
    dashboards:
      searchNamespace: ALL
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
    hosts:
      - grafana.k8s-prod.acned.ch
    path: /
    tls:
      - hosts:
        - grafana.k8s-prod.acend.ch
  serviceMonitor:
      enabled: true
  persistence:
    enabled: true
    size: 5Gi
prometheus:
  prometheusSpec:
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

