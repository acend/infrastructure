global:
  dnsService: rke2-coredns-rke2-coredns

loki:
  auth_enabled: false
  
  structuredConfig:
    limits_config:
      retention_period: 744h #31 days

  compactor:
    retention_enabled: true

  storage:
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin
    type: s3
    s3:
      endpoint: minio.acend-s3.svc.cluster.local
      insecure_skip_verify: true
      secretAccessKey: ${S3_SECRET_KEY}
      accessKeyId: ${S3_ACCESS_KEY}
      s3ForcePathStyle: true
      http_config:
        insecure_skip_verify: true

monitoring:
  dashboards:
    enabled: true
    namespace: monitoring
  lokiCanary:
    enabled: false
  serviceMonitor:
    enabled: true

gateway:
  podAnnotations:
    "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"

test:
  enabled: false

memberlist:
  service:
    publishNotReadyAddresses: true

write:
  replicas: 2
  persistence:
    enableStatefulSetAutoDeletePVC: false
    size: 5Gi
  extraArgs:
    - -config.expand-env
  extraEnvFrom:
  - secretRef:
      name: loki-s3-secret

tableManager:
  extraArgs:
    - -config.expand-env
  extraEnvFrom:
  - secretRef:
      name: loki-s3-secret

read:
  replicas: 2
  persistence:
    enableStatefulSetAutoDeletePVC: false
    size: 5Gi
  podAnnotations:
    "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
  extraArgs:
    - -config.expand-env
  extraEnvFrom:
  - secretRef:
      name: loki-s3-secret

backend:
  replicas: 2
  extraArgs:
    - -config.expand-env
  extraEnvFrom:
  - secretRef:
      name: loki-s3-secret